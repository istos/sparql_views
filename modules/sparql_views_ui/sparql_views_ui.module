<?php
// $Id$

/**
 * SPARQL Views UI
 *
 * The SPARQL Views UI gives a graphical user interface to SPARQL Views.
 */

/**
 * Implements hook_menu().
 */
function sparql_views_ui_menu() {
  $items['get-predicates'] = array(
    'title' => 'Temporary page for SVUI development',
    'page callback' => 'sparql_views_ui_get_predicates',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'sparql_views_ui.pages.inc',
  );
  $items['sparql-views/prefix-declaration'] = array(
    'title' => 'Format prefix declaration',
    'page callback' => 'sparql_views_ui_print_prefix_declaration',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'sparql_views_ui.pages.inc',
  );
  $items['sparql-views/get-result-preview'] = array(
    'title' => 'Get result preview',
    'page callback' => 'sparql_views_ui_get_result_preview',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'sparql_views_ui.pages.inc',
  );
  $items['admin/build/sparql_views/add/%ctools_js'] = array(
    'title' => 'Add',
    'page callback' => 'sparql_views_ui_add_query_modal',
    'page arguments' => array(4),
    'access arguments' => array('administer views'),
    'type' => MENU_CALLBACK,
    'file' => 'sparql_views_ui.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function sparql_views_ui_theme($existing, $type, $theme, $path) {
  return array(
    'prefix_declaration' => array(
      'arguments' => array('prefixes' => array()),
    ),
  );
}

function theme_prefix_declaration($ns_mappings) {
  $output = '';
  foreach ($ns_mappings as $prefix => $ns) {
    $output .= "PREFIX $prefix: <$ns>\n";
  }
  return $output;
}
